---
title: Tech Career Intelligence
subtitle: Your Data-Driven Career Roadmap for 2025
author: Saurabh Sharma & Haocun Wang
date: today
format:
  revealjs:
    theme: [default, custom-presentation.scss]
    slide-number: true
    preview-links: auto
    footer: Tech Career Intelligence | BU AD688
    transition: slide
    background-transition: fade
    smaller: false
    scrollable: false
  beamer:
    theme: Madrid
    colortheme: default
    fonttheme: structurebold
    navigation: horizontal
    section-titles: true
    toc: false
---

```{python}
#| label: setup
#| echo: false
#| include: false

# Local imports (organized alphabetically)
from src.data.website_processor import get_processed_dataframe, get_website_data_summary
from src.visualization.charts import display_figure
from src.visualization.presentation_charts import PresentationCharts

# Load data
df = get_processed_dataframe()
summary = get_website_data_summary()

# Recalculate salary metrics from df (since summary may be cached without computed salaries)
median_salary = df['salary_avg'].median()
summary['salary_range']['median'] = median_salary
summary['salary_range']['min'] = df['salary_avg'].min()
summary['salary_range']['max'] = df['salary_avg'].max()

# Initialize presentation charts
pcharts = PresentationCharts(df, summary)

# Calculate key metrics
median_k = int(median_salary / 1000)
total_jobs = summary['total_records']
```

## The Career Question We All Face {.center}

::: {.r-fit-text}
**Should I get a Master's degree or start working?**

**Where should I work?**

**What skills should I learn?**

**What salary should I expect?**
:::

::: {.fragment}
### Today's Answer: **Data, Not Guesswork**
:::

::: {.notes}
Every graduate faces these questions. We all know someone who took a job, regretted it, or wondered if grad school was worth it. Today we answer these questions with data from 72,000+ real job postings.
:::

---

## Our Thesis and Roadmap {.smaller}

### The Thesis

::: {.r-fit-text}
**Career success in tech is predictable and strategic—if you know where to look in the data**
:::

### Today's Journey

1. **The Data**: 72K job postings → What story do they tell?
2. **The Big 4 Factors**: Experience, Location, Industry, Remote Work
3. **The Skill Gap**: What employers actually want vs. what we learn
4. **The ROI Question**: Is a Master's degree worth $278K?
5. **Your Action Plan**: Data-driven decisions you can make today

::: {.notes}
Our thesis: Career outcomes aren't random—they follow patterns we can identify and leverage. We'll walk through our data exploration, show you the insights, and give you an action plan.
:::

---

## Our Approach: Data Over Guesswork {.smaller}

:::: {.columns}

::: {.column width="40%"}
### The Research Question

::: {.callout-note icon=false}
*"What factors predict career success in tech, and how can job seekers position themselves strategically?"*
:::

### The Data

**72,000+ job postings** (2024-2025)

- Real salaries from Lightcast
- Tech, Finance, Healthcare sectors
- **83% ML prediction accuracy**

### Our Analysis

✓ Experience progression patterns
✓ Geographic salary premiums
✓ Industry compensation gaps
✓ Remote work salary impact
✓ In-demand skills identification
:::

::: {.column width="60%"}
```{python}
#| label: kpi-overview
#| echo: false

fig = pcharts.create_kpi_overview()
display_figure(fig, "presentation_kpi_overview")
```

::: {.notes}
The KPI overview shows our key dataset metrics: $116K median salary, 72K+ job postings, 21 industries, and 3,841 cities. This gives you the scale and scope of our analysis.
:::

### Key Statistics

```{python}
#| label: kpi-overview-md
#| echo: false
#| output: asis

from IPython.display import Markdown, display

num_industries = df['industry'].nunique() if 'industry' in df.columns else 'N/A'
num_cities = df['city_name'].nunique() if 'city_name' in df.columns else 'N/A'

bullets = f"""
**Dataset Overview:**

- **Median Salary**: ${median_k}K
- **Total Jobs**: {total_jobs:,}
- **Industries Covered**: {num_industries}
- **Cities Analyzed**: {num_cities}
"""

display(Markdown(bullets))
```
:::

::::

::: {.notes}
We analyzed 72K real job postings using PySpark and machine learning. Our central research question: What predicts success in tech careers? We explored salary patterns, geography, industry, remote work, and skills to answer this.
:::

---

## Key Finding 1: The Experience Multiplier {.smaller}

::: {.callout-important icon=false}
## The 3× Multiplier Effect

Entry **$96K** → Mid **$115K** → Senior **$128K** → Leadership **$126K**

**That's 33% growth over your career—experience compounds like interest.**
:::

```{python}
#| label: experience-analysis
#| echo: false
#| fig-height: 4.5

fig = pcharts.create_experience_progression()
# Optimize for presentation - reduced height to fit with callout
fig.update_layout(
    height=420,
    margin=dict(l=60, r=40, t=70, b=50),
    font=dict(size=12)
)
display_figure(fig, "presentation_experience_analysis")
```

::: {.notes}
This is the most powerful finding: experience compounds. Entry level (0-2 years) ~$96K, mid-level (3-5 years) ~$115K, senior (6-10 years) ~$128K, leadership (10+ years) $126K. That's 33% total growth. Real-world example: your friend who started 5 years before you isn't earning 20% more—they're earning 30%+ more due to compounding experience.
:::

---

## Key Finding 2: The Geographic Lottery {.smaller}

::: {.fragment}
**The Reality**: Same job, same company, different city = **$146K difference**
:::

```{python}
#| label: geographic-analysis
#| echo: false

fig = pcharts.create_geographic_analysis()
display_figure(fig, "presentation_geographic_analysis")
```

::: {.callout-important}
## What This Means For You
Top-paying city: **$180K**. Lowest-paying city: **$34K**. Geographic variation is significant—433% difference between highest and lowest cities (robust analysis, 10+ jobs per city).
:::

::: {.fragment}
💡 **Job Seeker Insight**: Don't just chase the highest number—calculate take-home after cost of living. Or negotiate remote work from a low-cost city.
:::

::: {.notes}
Geography is the second-biggest lever. Top cities pay 433% more than bottom cities (robust analysis). But the cost of living difference is real. Smart play: negotiate remote work from a lower-cost city—you keep the high salary AND the low expenses. This is the real arbitrage opportunity.
:::

---

## Interactive Market Map: Where Are The Jobs? {.smaller}

::: {.callout-tip icon=false}
## Geographic Arbitrage Strategy
Technology hubs pay **433% more** than mid-tier cities (robust analysis). Secure remote role with tier-1 salary, live in tier-2/3 city.
:::

# Create interactive map showing job distribution and salary by location
```{python}
#| label: geographic-map-setup
#| echo: false

from src.visualization.charts import SalaryVisualizer, display_figure

vis = SalaryVisualizer(df)
```

# Create interactive Folium map for HTML/RevealJS
::: {when-format="html"}
```{python}
#| label: geographic-map-folium
#| echo: false

folium_map = vis.create_folium_salary_map(top_n=300, height=420)
folium_map
```
:::

# Create static Plotly map for DOCX/PDF/PPT
::: {when-format="docx pdf pptx"}
```{python}
#| label: geographic-map-plotly
#| echo: false
#| fig-format: png

geo_map = vis.create_plotly_geographic_map(top_n=300, height=420)
geo_map
```
:::

::: {.notes}
This interactive map shows where jobs are concentrated and what they pay. Notice the clusters on the coasts—especially Bay Area, Seattle, NYC, Boston. These aren't just higher salaries; they're also where most jobs are posted. But here's the strategic insight: with remote work, you can access these salaries without the cost of living. That's the arbitrage opportunity we're talking about.
:::

---

## Key Finding 3: Choose Your Industry Wisely {.smaller}

::: {.callout-important icon=false}
## The $57K Industry Gap

**Tech Services: $130K** | Finance: $114K | Healthcare: $90K | Education: $73K

Switching industries = **instant 78% raise** for same skills (Tech vs Education).
:::

```{python}
#| label: industry-analysis
#| echo: false
#| fig-height: 4

# Create simplified industry chart for presentation
import plotly.graph_objects as go

# Get top 6 industries by salary for cleaner display
industry_col = 'industry' if 'industry' in df.columns else 'industry'
salary_col = 'salary_avg' if 'salary_avg' in df.columns else 'salary_avg'

industry_stats = df.groupby(industry_col)[salary_col].agg(['median', 'count']).sort_values('median', ascending=False).head(6)

# Shorten industry names
def shorten_name(name):
    replacements = {
        'Professional, Scientific, and Technical Services': 'Tech Services',
        'Information': 'Information/Tech',
        'Finance and Insurance': 'Finance',
        'Manufacturing': 'Manufacturing',
        'Health Care and Social Assistance': 'Healthcare',
        'Educational Services': 'Education',
        'Retail Trade': 'Retail',
        'Accommodation and Food Services': 'Hospitality'
    }

    for long_name, short_name in replacements.items():
        if long_name in name:
            return short_name

    return name[:20]

industries = [shorten_name(ind) for ind in industry_stats.index.tolist()]
salaries = industry_stats['median'].tolist()

# Create simple horizontal bar chart
fig = go.Figure()

fig.add_trace(go.Bar(
    y=industries[::-1],
    x=salaries[::-1],
    orientation='h',
    marker=dict(
        color=salaries[::-1],
        colorscale='Viridis',
        showscale=False
    ),
    text=[f'${s/1000:.0f}K' for s in salaries[::-1]],
    textposition='outside',
    textfont=dict(size=15, color='black'),
    hovertemplate='%{y}<br>Median: %{text}<extra></extra>'
))

fig.update_layout(
    title=dict(text="Industry Salary Comparison", font=dict(size=16)),
    xaxis_title="Median Salary",
    height=380,
    font=dict(size=13),
    margin=dict(l=130, r=90, t=60, b=50),
    plot_bgcolor='white',
    paper_bgcolor='white',
    xaxis=dict(showgrid=True, gridcolor='lightgray')
)

display_figure(fig, "presentation_industry_analysis")
```

::: {.notes}
Industry is your third lever. Tech pays 78% more than education for the same skills. This isn't about being greedy—it's about maximizing your market value. You can always pivot to lower-paying "mission-driven" work later when you have financial security.
:::

---

## Key Finding 4: The Remote Work Myth Debunked {.smaller}

::: {.fragment}
**The Myth**: "Remote work pays less"
**The Reality**: Remote jobs pay the **same or better** ($114K median)
:::

```{python}
#| label: remote-analysis
#| echo: false

fig = pcharts.create_remote_work_analysis()
display_figure(fig, "presentation_remote_analysis")
```

::: {.callout-important}
## What This Means For You
Remote: **$114K** | Hybrid: **$114K** | On-site: **$108K**. Plus save $5K/year on commute + work clothes.
:::

::: {.fragment}
💡 **Job Seeker Insight**: Remote work is the ultimate career hack—same pay, lower expenses, better quality of life. Always negotiate for it.
:::

::: {.notes}
This was the biggest surprise in our data. Remote work doesn't pay less—it often pays MORE. Why? Companies competing for talent nationally must offer competitive salaries. 22% of jobs are fully remote, 30% hybrid. And you save 2 hours/day commuting. That's 500 hours/year—equivalent to 12 work weeks—back in your life.
:::

---

## Key Finding 5: The Skills That Pay {.smaller}

```{python}
#| label: skills-callout
#| echo: false
#| output: asis

# Get actual skills data and create callout
from IPython.display import Markdown

skill_stats = pcharts.get_skills_premium_data()
top_3 = skill_stats.nlargest(3, 'premium')

callout_text = f"""
::: {{.callout-important icon=false}}
## The Skills Premium (From Our Data)

**{top_3.iloc[0]['skill']}**: **+{int(top_3.iloc[0]['premium'])}%** salary ({int(top_3.iloc[0]['count']):,} jobs)
**{top_3.iloc[1]['skill']}**: **+{int(top_3.iloc[1]['premium'])}%** salary ({int(top_3.iloc[1]['count']):,} jobs)
**{top_3.iloc[2]['skill']}**: **+{int(top_3.iloc[2]['premium'])}%** salary ({int(top_3.iloc[2]['count']):,} jobs)
:::
"""
display(Markdown(callout_text))
```

```{python}
#| label: skills-analysis
#| echo: false

fig = pcharts.create_skills_premium_analysis()
display_figure(fig, "presentation_skills_premium")
```

::: {.notes}
The skill gap is real. Employers want cloud computing (AWS, Kubernetes), modern ML tools, and containerization. These aren't typically taught in undergrad. This is why many pursue Master's degrees or boot camps.
:::

---

## Machine Learning Insights {.smaller}

```{python}
#| label: ml-feature-importance
#| echo: false

fig = pcharts.create_feature_importance()
display_figure(fig, "presentation_ml_feature_importance")
```

::: {.callout-important}
## Career Takeaway
**Job title is #1** (35% importance). **83% accuracy** predicting salary from 72K+ jobs.
:::

::: {.notes}
Our ML model reveals job title matters most (35%), followed by industry and location. You can control these factors through strategic career choices.
:::

---

## The $278K Question: Is A Master's Degree Worth It? {.smaller}

::: {.fragment}
**The Setup**: Your friend got a job at $110K. You went to grad school. Two years later, you graduate with $50K debt—and they've earned $220K. Are you behind?
:::

```{python}
#| label: masters-roi
#| echo: false

# Calculate breakeven for display
bachelor_salary = median_salary
master_salary = bachelor_salary * 1.20
tuition = 50000
years_in_program = 2
foregone_earnings = bachelor_salary * years_in_program
total_cost = tuition + foregone_earnings
annual_premium = master_salary - bachelor_salary
breakeven = int(total_cost / annual_premium)

fig = pcharts.create_masters_roi(median_salary)
display_figure(fig, "presentation_masters_roi")
```

::: {.callout-important}
## The Math
**Real cost: ${int(total_cost/1000)}K** (tuition $50K + foregone earnings $228K). Salary premium: **20%** ($22K/year). **Breakeven: {breakeven} years**.
:::

::: {.fragment}
💡 **Job Seeker Insight**: Master's is an **investment**, not a guarantee. It pays off if you stay in the field 12+ years AND leverage the skills. Career switchers benefit most.
:::

::: {.notes}
The Master's degree ROI calculation: $50K tuition + $228K foregone earnings = $278K total cost. With a 20% salary premium ($22K/year), you break even after 12 years. But here's the nuance: Master's degrees aren't about immediate ROI—they're about career ceiling. You need it for ML engineer, data scientist, research roles. It's the cost of entry to higher-paying career tracks.
:::

---

## Your Career Action Plan {.smaller}

```{python}
#| label: action-plan-roadmap
#| echo: false

fig = pcharts.create_action_plan_roadmap()
display_figure(fig, "presentation_action_plan")
```

::: {.callout-important}
## Career Takeaway
**Focus on what you control**: Location, industry, skills, and experience. Data shows clear patterns to success.
:::

::: {.notes}
These recommendations are directly from our data analysis. Focus on what you can control: location choice, industry, skills, and experience accumulation.
:::

---

## From Question to Answer: Our Journey {.center}

### We Started With A Question

::: {.fragment}
*"How can job seekers position themselves effectively in 2025?"*
:::

### We Explored 72,000 Job Postings

::: {.fragment}
Used PySpark + ML to find patterns (83% prediction accuracy)
:::

### We Found Clear Patterns

::: {.fragment}
1. **Experience** = 33% growth (Entry $96K → Senior $128K)
2. **Geography** = $146K difference (top vs. bottom cities, robust analysis)
3. **Industry** = $57K premium (Tech vs. Education)
4. **Remote** = Same pay, better life ($114K median)
5. **Skills** = 30% premium (Cloud, ML, containers)
6. **Master's** = 12-year breakeven, career ceiling unlock
:::

---

## What This Means For Job Seekers {.center}

### The Three Levers You Control

::: {.r-fit-text}
🎯 **Location** → Choose strategically or go remote

🎯 **Industry** → Tech pays 78% more

🎯 **Skills** → Cloud + ML = 30% salary boost
:::

### The One Thing You Can't Skip

::: {.fragment .r-fit-text}
⏰ **Experience** → Time compounds, start now
:::

### The Bottom Line

::: {.fragment}
::: {.r-fit-text}
**Career success is predictable—if you use data, not guesswork**
:::
:::

---

## Questions? {.center}

::: {.r-fit-text}
**Thank you!**
:::

📧 **Contact**: Saurabh Sharma & Haocun Wang

🔗 **Live Dashboard**: [Career Intelligence Platform](index.html)

📊 **Full Report**: [Complete Analysis](tech-career-intelligence-report.html)

💡 **Methodology**: [Technical Details](methodology.qmd)

::: {.fragment}
### One Final Thought

*"The best time to start your career was 5 years ago. The second best time is today—armed with data."*
:::

::: {.notes}
We've transformed 72,000 job postings into actionable career intelligence. Our thesis proved true: career outcomes follow predictable patterns. You can't control time, but you can control location, industry, and skills. Use this data to make strategic decisions, not emotional guesses. Your career is too important to leave to chance.
:::

